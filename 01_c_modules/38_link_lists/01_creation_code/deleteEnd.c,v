head	1.3;
access;
symbols;
locks
	sachin:1.3; strict;
comment	@ * @;


1.3
date	2023.02.14.18.31.13;	author sachin;	state Exp;
branches;
next	1.2;

1.2
date	2023.02.14.18.26.28;	author sachin;	state Exp;
branches;
next	1.1;

1.1
date	2023.02.11.17.57.45;	author sachin;	state Exp;
branches;
next	;


desc
@delete from end.
@


1.3
log
@removed a bug.
@
text
@#include"headers.h"
#include"structure.h"
#include"declarations.h"

void* deleteEnd(void *arg)
{
    Node *cur;
    #ifdef DEBUG
        printf("%s: Begin\n",__func__);
    #endif
    
    cur = (Node*)arg;
    if(cur->next == NULL)
    {
        printf("Nothing to delete.\n");
        return 0;
    }

    while((cur->next)->next != NULL)
    {
        cur = cur->next;
    }
    free(cur->next);
    cur->next = NULL; // deleted end node

    #ifdef DEBUG
        printf("%s: End\n",__func__);
    #endif
    return 0;
}@


1.2
log
@implemented the logic to delete the end node.
@
text
@d19 4
a22 1
    while((cur->next)->next != NULL){}
@


1.1
log
@Initial revision
@
text
@d13 5
a17 2
    while(cur->next != NULL)
        cur = cur->next;
d19 3
a21 1
    cur->next = (Node*)(*fptr[7])(0);
@
